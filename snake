#include <iostream>
#include <windows.h>
#include <ctime>
#include <conio.h>

using namespace std;

int main()
{
	const int width = 50, height = 20;

	char snake_head = 'O';
	char snake_body = 'o';
	char food = '*';	
	char live_chance = '+';
	
	const int max_length = 100; 
	int snake_body_X[max_length];
	int snake_body_Y[max_length];

	int snake_length = 1; 
	
	int food_X;
	int food_Y;
	
	COORD c; // переменная для координат
	HANDLE h = GetStdHandle(STD_OUTPUT_HANDLE); // указатель на любой объект

	CONSOLE_CURSOR_INFO cci = { sizeof(cci), false }; // находим курсор
	SetConsoleCursorInfo(h, &cci); // прячем курсор

	for (int y = 0; y < height; y++)
	{
		for (int x = 0; x < width; x++)
		{
			char s;
			if (x == 0 && y == 0) 
				s = 218;
			else if (x == 0 && y == height - 1) 
				s = 192;
			else if (y == 0 && x == width - 1) 
				s = 191;
			else if (y == height - 1 && x == width - 1) 
				s = 217;
			else if (y == 0 || y == height - 1) 
				s = 196;
			else if (x == 0 || x == width - 1) 
				s = 179;
			else s = ' '; 
			putchar(s); // стены
		}
		cout << endl;
	}
	
	snake_body_X[0] = width / 2; 
	snake_body_Y[0] = height / 2; 

	c.X = snake_body_X[0];
	c.Y = snake_body_Y[0];
	SetConsoleCursorPosition(h, c);
	putchar(snake_head); // первое появление головы

	do
	{
		food_X = rand() % (width - 2) + 1;
		food_Y = rand() % (height - 2) + 1;
	} while (food_X != snake_body_X[snake_length - 1] && food_Y!= snake_body_Y[snake_length - 1]);

	c.X = food_X;
	c.Y = food_Y;
	SetConsoleCursorPosition(h, c); 
	putchar(food); // первая еда

	bool live = true;
    int speed = 100;
	int move_x = 1, move_y = 0;
	
	do
	{
		Sleep(speed);
		if (_kbhit()) 
		{
			int k = _getch();

			switch (k) 
			{
			case 72: // вверх
				move_y = -1;
				move_x = 0;
				break;
			case 80: // вниз
				move_y = 1; 
				move_x = 0; 
				break;
			case 75: // влево
				move_y = 0;
				move_x = -1;
				break;
			case 77: // вправо
				move_y = 0;
				move_x = 1;
				break;
			case 27: // esc
				live = false;
				break;
			}
		}

		int X = snake_body_X[snake_length - 1] + move_x; // новая позиция головы змейки
		int Y = snake_body_Y[snake_length - 1] + move_y;

		if (X == 0 || X == width - 1 || Y == 0 || Y == height - 1) 
		{
			char s;
			if (X == 0)
			{
				c.X = X + 1;
			    c.Y = Y;
				SetConsoleCursorPosition(h, c);
			    putchar(' ');
				X = width - 2; // w - 1
			}
			else if (X == width - 1)
			{
				c.X = X - 1;
				c.Y = Y;
				SetConsoleCursorPosition(h, c);
				putchar(' ');
				X = 1; // 0
			}
			if (Y == 0)
			{
				c.X = X;
				c.Y = Y + 1;
				SetConsoleCursorPosition(h, c);
				putchar(' ');
				Y = height - 2; // h - 1
			}
			else if (Y == height - 1)
			{
				c.X = X;
				c.Y = Y - 1;
				SetConsoleCursorPosition(h, c);
				putchar(' ');
				Y = 1; // 0
			}

			c.X = snake_body_X[snake_length - 1] = X;
			c.Y = snake_body_Y[snake_length - 1] = Y;
			SetConsoleCursorPosition(h, c);
			putchar(snake_head);
		}

		else if (X == food_X && Y == food_Y)
		{
			c.X = snake_body_X[snake_length - 1]; 
			c.Y = snake_body_Y[snake_length - 1];
			SetConsoleCursorPosition(h, c); 
			putchar(snake_body); // тело вместо старой головы

			snake_length++;

			c.X = snake_body_X[snake_length - 1] = X;
			c.Y = snake_body_Y[snake_length - 1] = Y;
			SetConsoleCursorPosition(h, c); 
			putchar(snake_head); // голова вместо еды

			if (snake_length == max_length)
			{
				break;
			}

			int i; // поиск места для новой еды
			do
			{
				food_X = rand() % (width - 2) + 1;
				food_Y = rand() % (height - 2) + 1;

				i = 0; 
				for (; i < snake_length; i++) 
				{
					if (food_X == snake_body_X[i] && food_Y == snake_body_Y[i])
					{
						break;
					}
				}
			} while (i < snake_length);

			c.X = food_X; 
			c.Y = food_Y;
			SetConsoleCursorPosition(h, c); 
			putchar(food); // новая еда
		}

		// здесь будет иф на очки жизни!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

		else
		{
			int i = 1;
			for (; i < snake_length; i++)
			{
				if (X == snake_body_X[i] && Y == snake_body_Y[i]) // проверка на уроборос
				{
					break;
				}
			}
			if (i < snake_length)
			{
				break; // суицид = выход из игры
			}
			
			else // не уроборос
			{
				c.X = snake_body_X[0]; 
				c.Y = snake_body_Y[0];
				SetConsoleCursorPosition(h, c);
				putchar(' '); // стираем хвост

				if (snake_length > 1)
				{
					c.X = snake_body_X[snake_length - 1]; 
					c.Y = snake_body_Y[snake_length - 1];
					SetConsoleCursorPosition(h, c);
					putchar(snake_body); // тело вместо старой головы
				}

				for (int i = 0; i < snake_length - 1; i++) // запускаем цикл свдига координат звеньев змейки
				{
					snake_body_X[i] = snake_body_X[i + 1]; // обрабатываем все звенья - кроме последнего
					snake_body_Y[i] = snake_body_Y[i + 1];
				}

				c.X = snake_body_X[snake_length - 1] = X; 
				c.Y = snake_body_Y[snake_length - 1] = Y;
				SetConsoleCursorPosition(h, c);
				putchar(snake_head); // новая голова
			}
		}
	} while (live);

	system("cls"); 
	cout << "GAME OVER" << endl << "Your score: " << snake_length - 1 << endl;
	system("pause");
}
